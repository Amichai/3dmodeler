<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="duocode" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>